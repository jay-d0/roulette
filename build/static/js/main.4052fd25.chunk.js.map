{"version":3,"sources":["App.module.css","img/roulette_img.png","App.js","reportWebVitals.js","index.js"],"names":["module","exports","App","_useState","useState","_useState2","_slicedToArray","target","setTarget","_useState3","_useState4","data","setData","getNotionData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","options","response","results","projects","wrap","_context","prev","next","method","headers","accept","Authorization","concat","body","JSON","stringify","sorts","page_size","fetch","sent","json","console","log","stop","apply","arguments","useEffect","_jsxs","className","styles","background","children","headTitle","_jsx","rouletteOutline","buttonGroup","trigger","onClick","e","min","max","datas","filter","item","length","Math","floor","random","rouletteImg","alt","src","update","rouletteTextOutline","phrase","output","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","React","StrictMode"],"mappings":"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","file":"static/js/main.4052fd25.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"App_background__25ePq\",\"headTitle\":\"App_headTitle__2d0ZJ\",\"rouletteOutline\":\"App_rouletteOutline__1inZg\",\"buttonGroup\":\"App_buttonGroup__suTQ5\",\"trigger\":\"App_trigger__Blwy-\",\"update\":\"App_update__3tBMw\",\"rouletteImg\":\"App_rouletteImg__2Iecd\",\"rouletteTextOutline\":\"App_rouletteTextOutline__2I2LM\",\"phrase\":\"App_phrase__2I_uK\",\"output\":\"App_output__fxbHH\"};","export default __webpack_public_path__ + \"static/media/roulette_img.40b67c76.png\";","import styles from \"./App.module.css\";\nimport rouletteImg from \"./img/roulette_img.png\";\nimport { useState, useEffect } from \"react\";\n\n/* import { Client, APIErrorCode} from \"@notionhq/client\"; */\n/* import data from \"./img/roulette_data.json\"; */\n\nfunction App() {\n  const [target, setTarget] = useState(\"\");\n  const [data, setData] = useState(\"\");\n\n  const NOTION_TOKEN = \"secret_jEtzDFPbkHgKJOiqLDwFKmADQac03XugJMJy0CcY33x\";\n  const NOTION_DATABASE_ID = \"36f24dd86eb44ff58b370e921f66e411\";\n\n  const getNotionData = async () => {\n    // API 요청 설정하기\n    const options = {\n      method: \"POST\",\n      headers: {\n        accept: \"application/json\",\n        \"Notion-Version\": \"2022-06-28\",\n        \"content-type\": \"application/json\",\n        Authorization: `Bearer ${NOTION_TOKEN}`,\n      },\n      // 쿼리 설정하기\n      body: JSON.stringify({\n        sorts: [],\n        page_size: 100,\n      }),\n    };\n    // 데이터 받아오기\n    // 임시로 proxy 서버를 사용했습니다\n    const response = await fetch(\n      /* https://cors-anywhere.herokuapp.com/ */\n      `https://api.notion.com/v1/databases/${NOTION_DATABASE_ID}/query`,\n      options\n    );\n    const results = await response.json();\n    const projects = results.results;\n    setData(projects);\n    console.log(projects);\n  };\n\n  useEffect(() => {\n    getNotionData();\n  }, []);\n\n  return (\n    <div className={styles.background}>\n      <div className={styles.headTitle}>\n        Fun Members'\n        <br />\n        Roulette\n      </div>\n      <div className={styles.rouletteOutline}>\n        <div className={styles.buttonGroup}>\n          <button\n            className={styles.trigger}\n            onClick={(e) => {\n              const rand = (min, max) => {\n                return Math.floor(Math.random() * (max - min + 1)) + min;\n              };\n              const datas = data.filter(\n                (item) => item[\"properties\"][\"성취 여부\"][\"checkbox\"] === false\n              );\n              /* tag:  results['properties']['태그']['multi_select']\n              url: results['url'] */\n              setTarget(\n                datas[rand(0, datas.length)][\"properties\"][\"Contents\"][\n                  \"title\"\n                ][0][\"text\"][\"content\"]\n              );\n            }}\n          >\n            <img\n              className={styles.rouletteImg}\n              alt=\"roulette_img\"\n              src={rouletteImg}\n            />\n          </button>\n          <div className={styles.update}>completed notion db automation</div>\n        </div>\n        <div className={styles.rouletteTextOutline}>\n          <div className={styles.phrase}>이거 다 마시면 우리..</div>\n          <div className={styles.output}>{target}</div>\n          <div className={styles.phrase}>하는거다?</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./index.module.css\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}