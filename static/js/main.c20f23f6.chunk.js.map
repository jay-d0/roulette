{"version":3,"sources":["App.module.css","img/roulette_img.png","App.js","reportWebVitals.js","index.js"],"names":["module","exports","App","_useState","useState","_useState2","_slicedToArray","target","setTarget","_useState3","_useState4","data","setData","_useState5","_useState6","url","setUrl","getNotionData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","options","response","results","projects","wrap","_context","prev","next","method","headers","accept","Authorization","concat","body","JSON","stringify","sorts","page_size","fetch","sent","json","stop","apply","arguments","useEffect","_jsxs","className","styles","background","children","headTitle","_jsx","rouletteOutline","buttonGroup","trigger","onClick","e","min","max","datas","filter","item","result","length","Math","floor","random","title","emoji","error","rouletteImg","alt","src","update","rouletteTextOutline","phrase","output","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","React","StrictMode"],"mappings":"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","file":"static/js/main.c20f23f6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"App_background__25ePq\",\"headTitle\":\"App_headTitle__2d0ZJ\",\"rouletteOutline\":\"App_rouletteOutline__1inZg\",\"buttonGroup\":\"App_buttonGroup__suTQ5\",\"trigger\":\"App_trigger__Blwy-\",\"update\":\"App_update__3tBMw\",\"rouletteImg\":\"App_rouletteImg__2Iecd\",\"rouletteTextOutline\":\"App_rouletteTextOutline__2I2LM\",\"phrase\":\"App_phrase__2I_uK\",\"output\":\"App_output__fxbHH\",\"href\":\"App_href__SU3r_\"};","export default __webpack_public_path__ + \"static/media/roulette_img.40b67c76.png\";","import styles from \"./App.module.css\";\nimport rouletteImg from \"./img/roulette_img.png\";\nimport { useState, useEffect } from \"react\";\n\n/* import { createProxyMiddleware } from \"http-proxy-middleware\"; */\n/* import data from \"./img/roulette_data.json\"; */\n\nfunction App() {\n  const [target, setTarget] = useState(\"\");\n  const [data, setData] = useState(\"\");\n  const [url, setUrl] = useState(\"\");\n\n  /* createProxyMiddleware({\n    target:\n      \"https://api.notion.com/v1/databases/36f24dd86eb44ff58b370e921f66e411\",\n    changeOrigin: true,\n  }); */\n\n  const NOTION_TOKEN = \"secret_jEtzDFPbkHgKJOiqLDwFKmADQac03XugJMJy0CcY33x\";\n  /* const NOTION_DATABASE_ID = \"36f24dd86eb44ff58b370e921f66e411\"; */\n\n  /* module = (app) => {\n    app.use(\n      \"/query\",\n      createProxyMiddleware({\n        target:\n          \"https://api.notion.com/v1/databases/36f24dd86eb44ff58b370e921f66e411\",\n        changeOrigin: true,\n      })\n    );\n  }; */\n\n  const getNotionData = async () => {\n    /*  createProxyMiddleware({\n      target:\n        \"https://api.notion.com/v1/databases/36f24dd86eb44ff58b370e921f66e411\",\n      changeOrigin: true,\n    }); */\n\n    // API 요청 설정하기\n    const options = {\n      method: \"POST\",\n      headers: {\n        accept: \"application/json\",\n        \"Notion-Version\": \"2022-06-28\",\n        \"content-type\": \"application/json\",\n        Authorization: `Bearer ${NOTION_TOKEN}`,\n      },\n      // 쿼리 설정하기\n      body: JSON.stringify({\n        sorts: [],\n        page_size: 100,\n      }),\n    };\n    // 데이터 받아오기\n    const response = await fetch(\n      // free proxy-server : https://roulette-proxy.herokuapp.com/\n      // api url: https://api.notion.com/v1/databases/36f24dd86eb44ff58b370e921f66e411\n      \"/query\",\n      options\n    );\n\n    const results = await response.json();\n\n    const projects = results.results;\n    setData(projects);\n  };\n\n  useEffect(() => {\n    getNotionData();\n  }, []);\n\n  return (\n    <div className={styles.background}>\n      <div className={styles.headTitle}>\n        Fun Members'\n        <br />\n        Roulette\n      </div>\n      <div className={styles.rouletteOutline}>\n        <div className={styles.buttonGroup}>\n          <button\n            className={styles.trigger}\n            onClick={(e) => {\n              const rand = (min, max) => {\n                return Math.floor(Math.random() * (max - min + 1)) + min;\n              };\n              const datas = data.filter(\n                (item) => item[\"properties\"][\"성취 여부\"][\"checkbox\"] === false\n              );\n              /* tag:  results['properties']['태그']['multi_select'] */\n              const result = datas[rand(0, datas.length - 1)];\n\n              const title = () => {\n                const title =\n                  result[\"properties\"][\"Contents\"][\"title\"][0][\"text\"][\n                    \"content\"\n                  ];\n                try {\n                  const emoji = result[\"icon\"][\"emoji\"];\n                  return emoji + \" \" + title + \" \" + emoji;\n                } catch (error) {\n                  return title;\n                }\n              };\n              setTarget(title());\n              setUrl(result[\"url\"]);\n            }}\n          >\n            <img\n              className={styles.rouletteImg}\n              alt=\"roulette_img\"\n              src={rouletteImg}\n            />\n          </button>\n          <div className={styles.update}>completed notion db automation</div>\n        </div>\n        <div className={styles.rouletteTextOutline}>\n          <div className={styles.phrase}>이거 다 마시면 우리..</div>\n          <div className={styles.output}>\n            <a href={url} className={styles.href}>\n              {target}\n            </a>\n          </div>\n          <div className={styles.phrase}>하는거다?</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./index.module.css\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}